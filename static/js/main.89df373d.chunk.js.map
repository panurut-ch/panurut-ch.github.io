{"version":3,"sources":["component/Table.js","component/Datepicker.js","component/Autocomplete.js","component/index.js","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","data","setData","blocking","setBlocking","changePage","setChangePage","useEffect","fetch","headers","then","res","json","setTimeout","tag","title","columns","field","onChangePage","options","grouping","Datepicker","selectedDate","handleDateChange","Grid","container","item","xs","FormControl","fullWidth","utils","DateFnsUtils","DateTimePicker","label","value","onChange","Autocompleter","errorMessage","setErrorMessage","catch","message","defaultProps","getOptionLabel","option","firstname","Autocomplete","id","debug","renderInput","params","TextField","error","Index","theme","useTheme","breakpoint","useMediaQuery","breakpoints","up","spacing","Typography","variant","md","App","className","Box","m","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89df373d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport BlockUi from \"react-block-ui\";\r\nimport \"react-block-ui/style.css\";\r\n\r\nconst DEFAULT_THROTTLING = 2500;\r\n\r\nexport const Table = () => {\r\n  // const api = require('/mockup-api/data.json')\r\n  // const api = \"https://604c46ffd3e3e10017d51751.mockapi.io/api/v1/data1\";\r\n\r\n  const [data, setData] = useState([]);\r\n  const [blocking, setBlocking] = useState(true);\r\n\r\n  // Blocking ui when paging\r\n  const [changePage, setChangePage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`./data/data.json`, {\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data))\r\n      .then(() => setBlocking(false));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // mockup loading blocked ui\r\n  useEffect(() => {\r\n    if (blocking && changePage) {\r\n      setTimeout(() => {\r\n        setBlocking(false);\r\n        setChangePage(false);\r\n      }, DEFAULT_THROTTLING);\r\n    }\r\n  }, [ blocking, changePage ]);\r\n\r\n  // pre assign column from api\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      field: \"id\",\r\n    },\r\n    {\r\n      title: \"First Name\",\r\n      field: \"firstname\",\r\n    },\r\n    {\r\n      title: \"Last Name\",\r\n      field: \"lastname\",\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      field: \"balance\",\r\n    },\r\n  ];\r\n\r\n  // setState for blocking ui\r\n  const onChangePage = () => {\r\n    setBlocking(true);\r\n    setChangePage(true);\r\n  }\r\n\r\n  return (\r\n    <BlockUi tag=\"div\" blocking={blocking}>\r\n      <div>\r\n        <MaterialTable\r\n          title=\"Data Table\"\r\n          data={data}\r\n          columns={columns}\r\n          onChangePage={onChangePage}\r\n          options={{\r\n            grouping: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </BlockUi>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { Grid, FormControl } from \"@material-ui/core\";\r\n\r\n// import MomentUtils from \"@date-io/moment\";\r\n// import { MuiPickersUtilsProvider, DateTimePicker } from \"material-ui-thai-datepickers\";\r\n \r\n// import 'moment/locale/th';\r\n\r\nexport default function Datepicker() {\r\n  const [selectedDate, handleDateChange] = useState(null);\r\n\r\n  return (\r\n    <Grid container>\r\n        <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DateTimePicker \r\n                label=\"Date & Time\"\r\n                value={selectedDate} \r\n                onChange={handleDateChange}\r\n              />\r\n            </MuiPickersUtilsProvider>  \r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n}\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nexport default function Autocompleter() {\r\n  // const api = require('/mockup-api/data.json')\r\n  // const api = \"https://604c46ffd3e3e10017d51751.mockapi.io/api/v1/data1\";\r\n\r\n  const [data, setData] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const loadData = () => {\r\n    fetch(`./data/data.json`, {\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data))\r\n      .catch((message) => setErrorMessage(message));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      loadData();\r\n    }, 5000);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const defaultProps = {\r\n    options: data,\r\n    getOptionLabel: (option) => option.firstname,\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Autocomplete\r\n          {...defaultProps}\r\n          id=\"First Name\"\r\n          debug\r\n          fullWidth\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"First Name\" error={errorMessage} />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Table from \"./Table\";\r\nimport Datepicker from \"./Datepicker\";\r\nimport Autocompleter from \"./Autocomplete\";\r\nimport { Grid, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\r\n// import TodayIcon from '@material-ui/icons/Today';\r\n\r\nconst Index = () => {\r\n  // For responsive any device\r\n  const theme = useTheme();\r\n  const breakpoint = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h3\">Hello</Typography>\r\n      </Grid>\r\n\r\n      {breakpoint ? (\r\n        <>\r\n          <Grid item md={6}>\r\n            {/* <Grid xs={1} style={{ textAlign: \"right\" }}>\r\n                <TodayIcon />\r\n            </Grid> */}\r\n            <Datepicker />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Autocompleter />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Table />\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid item xs={12}>\r\n            <Datepicker />\r\n            <Autocompleter />\r\n            <Table />\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"react-block-ui/style.css\";\r\nimport { Box } from '@material-ui/core';\r\nimport Index from \"./component/index\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Box m={3}>\r\n          <Index />\r\n        </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}